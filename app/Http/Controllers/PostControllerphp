<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Post;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;

class PostController extends Controller
{
    public function store(Request $request)
    {
        $validated = $request->validate([
            'title' => 'required|string|max:255',
            'content' => 'required|string',
            'slug' => 'required|string|unique:posts,slug',
            'image' => 'required|image|mimes:jpeg,png,jpg,gif,webp|max:2048',
        ]);

        // Subir y convertir la imagen
        $imagePath = Post::uploadImage($request);

        $post = Post::create([
            'title' => $validated['title'],
            'content' => $validated['content'],
            'slug' => $validated['slug'],
            'image' => $imagePath,
        ]);

        return response()->json([
            'message' => 'Post creado exitosamente',
            'data' => $post,
        ], 201);
    }

    public function update(Request $request, Post $post)
    {
        $validated = $request->validate([
            'title' => 'sometimes|string|max:255',
            'content' => 'sometimes|string',
            'slug' => 'sometimes|string|unique:posts,slug,' . $post->id,
            'image' => 'sometimes|image|mimes:jpeg,png,jpg,gif,webp|max:2048',
        ]);

        // Si se sube una nueva imagen, eliminar la anterior
        if ($request->hasFile('image')) {
            if ($post->image) {
                Storage::delete('public/' . $post->image);
            }
            $validated['image'] = Post::uploadImage($request);
        }

        $post->update($validated);

        return response()->json([
            'message' => 'Post actualizado exitosamente',
            'data' => $post,
        ]);
    }
}

